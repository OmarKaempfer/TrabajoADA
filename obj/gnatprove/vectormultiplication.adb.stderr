vectormultiplication.adb:7:27: medium: overflow check might fail (e.g. when result = 0)[#7]
vectormultiplication.adb:7:46: medium: overflow check might fail (e.g. when result = 0)[#4]
vectormultiplication.adb:7:63: medium: array index check might fail (e.g. when I = -1 and Second_vector = (0 => 0, others => -1) and Second_vector'First = 0 and Second_vector'Last = 0 and result = 0)[#1]
vectormultiplication.adb:17:42: medium: array index check might fail (e.g. when Given_vector = (1 => 0, others => 2) and Given_vector'First = 1 and Given_vector'Last = 2 and count = 0 and result = (others => 1))[#5]
vectormultiplication.adb:17:49: medium: overflow check might fail (e.g. when result = (others => 2))[#3]
vectormultiplication.adb:18:25: medium: overflow check might fail (e.g. when count = 2147483647)[#0]
vectormultiplication.adb:21:32: medium: loop invariant might fail in first iteration, cannot prove Given_vector'First + Given_vector'First = Given_vector'length (e.g. when Given_vector = (others => 0) and Given_vector'First = 1 and Given_vector'Last = 1)[#8]
vectormultiplication.ads:22:15: medium: postcondition might fail, cannot prove Constant_Product'Result (J) / Given_vector (J) = Given_constant (e.g. when Constant_Product'First = 1 and Constant_Product'Last = 2 and Constant_Product'Result = (1 => -1, others => 2) and Given_constant = 0 and Given_vector = (others => 0) and Given_vector'First = 1 and Given_vector'Last = 2 and J = 1)[#9]
vectormultiplication.ads:22:43: medium: divide by zero might fail[#2]
vectormultiplication.ads:22:43: medium: overflow check might fail[#6]
